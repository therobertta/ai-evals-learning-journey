name: Issue Branch Helper

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to create branch for'
        required: true
        type: string
      branch_prefix:
        description: 'Branch prefix (e.g., feature, bugfix, hw2)'
        required: false
        default: 'issue'
        type: string

jobs:
  create-branch-and-pr-template:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
      
    - name: Get issue details
      id: issue-details
      run: |
        ISSUE_NUMBER="${{ github.event.inputs.issue_number }}"
        
        # Get issue details
        ISSUE_DATA=$(gh api repos/${{ github.repository }}/issues/$ISSUE_NUMBER)
        ISSUE_TITLE=$(echo "$ISSUE_DATA" | jq -r '.title')
        ISSUE_BODY=$(echo "$ISSUE_DATA" | jq -r '.body // ""')
        
        # Create branch name from issue title
        BRANCH_NAME="${{ github.event.inputs.branch_prefix }}-$ISSUE_NUMBER-$(echo "$ISSUE_TITLE" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-zA-Z0-9]/-/g' | sed 's/--*/-/g' | sed 's/^-\|-$//g' | cut -c1-50)"
        
        echo "issue_title=$ISSUE_TITLE" >> $GITHUB_OUTPUT
        echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
        echo "issue_body<<EOF" >> $GITHUB_OUTPUT
        echo "$ISSUE_BODY" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        echo "‚úÖ Issue #$ISSUE_NUMBER: $ISSUE_TITLE"
        echo "‚úÖ Suggested branch name: $BRANCH_NAME"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create branch
      run: |
        BRANCH_NAME="${{ steps.issue-details.outputs.branch_name }}"
        
        # Create and push new branch
        git checkout -b "$BRANCH_NAME"
        git push -u origin "$BRANCH_NAME"
        
        echo "‚úÖ Created and pushed branch: $BRANCH_NAME"
        
    - name: Generate PR template
      run: |
        ISSUE_NUMBER="${{ github.event.inputs.issue_number }}"
        ISSUE_TITLE="${{ steps.issue-details.outputs.issue_title }}"
        BRANCH_NAME="${{ steps.issue-details.outputs.branch_name }}"
        
        echo "## üìã PR Template for Issue #$ISSUE_NUMBER"
        echo ""
        echo "**Branch:** \`$BRANCH_NAME\`"
        echo "**Issue:** #$ISSUE_NUMBER - $ISSUE_TITLE"
        echo ""
        echo "### üéØ Summary"
        echo "<!-- Brief description of what this PR accomplishes -->"
        echo ""
        echo "Closes #$ISSUE_NUMBER"
        echo ""
        echo "### üöß Changes Made"
        echo "<!-- List the main changes/features implemented -->"
        echo "- [ ] Change 1"
        echo "- [ ] Change 2"
        echo "- [ ] Change 3"
        echo ""
        echo "### üß™ Test Plan"
        echo "<!-- How to test the changes -->"
        echo "- [ ] Test case 1"
        echo "- [ ] Test case 2"
        echo "- [ ] Test case 3"
        echo ""
        echo "### üìù Additional Notes"
        echo "<!-- Any additional context or notes -->"
        echo ""
        echo "---"
        echo "ü§ñ Generated with [Claude Code](https://claude.ai/code)"
        echo ""
        echo "### üîß Commands to create PR:"
        echo "\`\`\`bash"
        echo "# After making your changes:"
        echo "git add ."
        echo "git commit -m \"Implement solution for issue #$ISSUE_NUMBER"
        echo ""
        echo "ü§ñ Generated with [Claude Code](https://claude.ai/code)"
        echo ""
        echo "Co-Authored-By: Claude <noreply@anthropic.com>\""
        echo "git push"
        echo ""
        echo "# Create PR:"
        echo "gh pr create --title \"$ISSUE_TITLE\" --body-file PR_BODY.md"
        echo "\`\`\`"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}